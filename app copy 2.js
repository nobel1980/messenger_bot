const express = require('express');
const dotenv = require('dotenv');
const axios = require('axios');
const bodyParser = require('body-parser');
const request = require('request');

dotenv.config();

const app = express();
const PAGE_ACCESS_TOKEN = process.env.PAGE_ACCESS_TOKEN;
const VERIFY_TOKEN = process.env.VERIFY_TOKEN;
const OLLAMA_URL = 'http://localhost:11434/api/generate';
const userLanguage = {};

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.use('/images', express.static('public/images'));

// Root endpoint
app.get('/', (req, res) => {
  res.send('Messenger bot is running.');
});

// Webhook verification
app.get('/webhook', (req, res) => {
  const mode = req.query['hub.mode'];
  const token = req.query['hub.verify_token'];
  const challenge = req.query['hub.challenge'];
  if (mode === 'subscribe' && token === VERIFY_TOKEN) {
    return res.status(200).send(challenge);
  }
  return res.sendStatus(403);
});

// Webhook to receive messages
app.post('/webhook', (req, res) => {
  const body = req.body;
  if (body.object === 'page') {
    body.entry.forEach(entry => {
      const webhookEvent = entry.messaging[0];
      const senderPsid = webhookEvent.sender.id;

      if (webhookEvent.postback) {
        handlePostback(senderPsid, webhookEvent.postback);
      } else if (webhookEvent.message) {
        handleMessage(senderPsid, webhookEvent.message);
      }

        getUserProfile(senderPsid, (user) => {
        console.log(`User clicked: ${user.first_name} ${user.last_name}`);
        // You can also reply with:
        `Hi ${user.first_name}, thanks for your message!`
      });
    });
    res.status(200).send('EVENT_RECEIVED');
  } else {
    res.sendStatus(404);
  }
});

function handleMessage(senderPsid, message) {
  sendLanguageSelection(senderPsid);
}

function handleMessage(senderPsid, receivedMessage) {
  const lang = userLanguage[senderPsid] || 'english'; // default to English
  const isBangla = lang === 'bangla';

  // Handle quick replies
  if (receivedMessage.quick_reply) {
    const payload = receivedMessage.quick_reply.payload;

    switch (payload) {
      case 'OPERATOR_GP':
        sendText(senderPsid, isBangla
          ? "ЁЯУЮ ржЧрзНрж░рж╛ржорзАржгржлрзЛржи рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз ржЕржержмрж╛ рзжрззрзнрзжрзжрззрзжрзжрззрзирзз"
          : "ЁЯУЮ Grameenphone helpline: 121 or 01700100121");
        break;

      case 'OPERATOR_ROBI':
        sendText(senderPsid, isBangla
          ? "ЁЯУЮ рж░ржмрж┐ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзй ржЕржержмрж╛ рзжрззрзорззрзпрзкрзжрзжрзкрзжрзж"
          : "ЁЯУЮ Robi helpline: 123 or 01819400400");
        break;

      case 'OPERATOR_BANGLALINK':
        sendText(senderPsid, isBangla
          ? "ЁЯУЮ ржмрж╛ржВрж▓рж╛рж▓рж┐ржВржХ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз ржЕржержмрж╛ рзжрззрзпрззрззрзйрзжрзкрззрзирзз"
          : "ЁЯУЮ Banglalink helpline: 121 or 01911304121");
        break;

      case 'OPERATOR_TELETALK':
        sendText(senderPsid, isBangla
          ? "ЁЯУЮ ржЯрзЗрж▓рж┐ржЯржХ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз ржЕржержмрж╛ рзжрззрзлрзжрзжрззрзирззрззрзирзз"
          : "ЁЯУЮ Teletalk helpline: 121 or 01500121121");
        break;

      default:
        sendText(senderPsid, isBangla
          ? "ржжрзБржГржЦрж┐ржд, ржЕржкрж╛рж░рзЗржЯрж░ржЯрж┐ рж╢ржирж╛ржХрзНржд ржХрж░рж╛ ржпрж╛рзЯржирж┐ред"
          : "Sorry, unrecognized operator.");
    }

  // Handle text messages
  } else if (receivedMessage.text) {
    let userMessage = "";
    let isNumber = false;

    if (receivedMessage && receivedMessage.text !== undefined) {
      userMessage = String(receivedMessage.text).trim().toLowerCase(); // normalize input
      isNumber = !isNaN(userMessage);
    }

    console.log("User message:", userMessage, "Is number:", isNumber);

    // Inside your handler
    if (isNumber && userMessage.length === 11) {
      const apiBase = "https://172.16.136.20/BTRCAPI/api/user.php";

      // Step 1: Authenticate and get JWT
      axios.post(
        apiBase,
        {
          email: "digital@genexinfosys.com",
          password: "root1234"
        },
        {
          headers: { "Content-Type": "application/json" },
          httpsAgent: new (require("https").Agent)({ rejectUnauthorized: false }) // allow self-signed SSL
        }
      )
      .then(authRes => {
        const jwt = authRes.data.jwt;
        console.log("Got JWT:", jwt);

        // Step 2: Call API with jwt + user number
        return axios.get(
          `${apiBase}?jwt=${jwt}&id=${userMessage}`,
          {
            httpsAgent: new (require("https").Agent)({ rejectUnauthorized: false })
          }
        );
      })
      .then(userRes => {
        console.log("User API response:", userRes.data);

        // Send the result back to Messenger/WhatsApp
        sendText(senderPsid, isBangla
          ? `API рж░рзЗрж╕ржкржирзНрж╕: ${JSON.stringify(userRes.data)}`
          : `API Response: ${JSON.stringify(userRes.data)}`);
      })
      .catch(err => {
        console.error("API error:", err.message);
        sendText(senderPsid, isBangla
          ? "API ржХрж▓ ржХрж░рж╛рж░ рж╕ржоржпрж╝ ржПржХржЯрж┐ рждрзНрж░рзБржЯрж┐ ржШржЯрзЗржЫрзЗред"
          : "There was an error calling the API.");
      });
    }


    // тЬЕ Greeting check
    else if (userMessage.includes("hello") || userMessage.includes("hi")) {
      sendText(senderPsid, isBangla
        ? "рж╣рзНржпрж╛рж▓рзЛ! ржХрж┐ржнрж╛ржмрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐?"
        : "Hi there! How can I assist you today?");
    }

    // тЬЕ Fallback
    else {
      sendText(senderPsid, isBangla
        ? "ржжрзБржГржЦрж┐ржд, ржЖржорж┐ ржмрзБржЭрждрзЗ ржкрж╛рж░рж┐ржирж┐ред ржирж┐ржЪрзЗрж░ ржорзЗржирзБ ржерзЗржХрзЗ ржПржХржЯрж┐ ржЕржкрж╢ржи ржмрзЗржЫрзЗ ржирж┐ржиред"
        : "Sorry, I didn't understand that. Please select an option from the menu.");
      sendMainMenuAsCarousel(senderPsid, lang);
    }

  // Unsupported message type
  } else {
    sendText(senderPsid, isBangla
      ? "ржжрзБржГржЦрж┐ржд, ржЖржорж┐ рж╢рзБржзрзБ ржЯрзЗржХрзНрж╕ржЯ ржУ ржХрзБржЗржХ рж░рж┐ржкрзНрж▓рж╛ржЗ ржмрзБржЭрждрзЗ ржкрж╛рж░рж┐ред"
      : "Sorry, I can only understand text or quick replies.");
  }
}


function handlePostback(senderPsid, postback) {
  const payload = postback.payload;
  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

  switch (payload) {
    case 'GET_STARTED':
      sendLanguageSelection(senderPsid);
      break;

    case 'LANG_BANGLA':
      (async () => {
        userLanguage[senderPsid] = 'bangla';

        await callSendAPI(senderPsid, {
          text: 'ржЖржкржирж┐ ржмрж╛ржВрж▓рж╛ ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзЗржЫрзЗржиред ржПржЦржи ржЖржкржирж┐ ржХрзЛржи рж╕рзЗржмрж╛ ржирж┐рждрзЗ ржЪрж╛ржи? ржжрж┐ржХ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи: ЁЯСИ ЁЯСЙ тЖФя╕П'
        });

        await delay(2000);

        await sendMainMenuAsCarousel(senderPsid, 'bangla');
      })();
      break;

    case 'LANG_ENGLISH':
      (async () => {
        userLanguage[senderPsid] = 'english'; 
        await callSendAPI(senderPsid, {
          text: 'You have selected English. What service do you want next? Choose direction: ЁЯСИ ЁЯСЙ тЖФя╕П'
        });

        await delay(2000);

        await sendMainMenuAsCarousel(senderPsid, 'english');
      })();
      break;

    case 'BTRC':
      (async () => {
        if (userLanguage[senderPsid] === "bangla") {
          await sendText(senderPsid, "ржЖржкржирж╛рж░ ржЕржнрж┐ржпрзЛржЧ, ржкрзНрж░рж╢рзНржи, ржЕржирзБрж░рзЛржз ржЭрж╛ржорзЗрж▓рж╛ржмрж┐рж╣рзАржи ржЬржорж╛ ржжрж┐ржи: ЁЯСЗ")  ;
        } else {
          await sendText(senderPsid, "Submit your complaints, questions, and requests hassle-free.ЁЯСЗ");
        }

        await delay(2000);

        btrcCarousel(senderPsid, userLanguage[senderPsid]);
      })();
      break;
    
    case 'COMPLAIN_STATUS':
        if (userLanguage[senderPsid] === "bangla") {
          sendText(senderPsid, "ржжрзЯрж╛ ржХрж░рзЗ ржЖржкржирж╛рж░ ржЕржнрж┐ржпрзЛржЧрзЗрж░ рж╕ржарж┐ржХ рззрззржбрж┐ржЬрж┐ржЯ ржПрж░ ржорзЛржмрж╛ржЗрж▓ ржиржорзНржмрж░ржЯрж┐ рж╢рзЗрзЯрж╛рж░ ржХрж░рзБржи: ЁЯСЗ")  ;
        } else {
          sendText(senderPsid, "Please share the exact 11-digit mobile number of your complaint: ЁЯСЗ");
        }
      break;  

    case 'MOBILE_OPERATOR':
      (async () => {
        if (userLanguage[senderPsid] === "bangla") {
          await sendText(senderPsid, "ржорзЛржмрж╛ржЗрж▓ ржЕржкрж╛рж░рзЗржЯрж░ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирждрзЗ ржирж┐ржЪрзЗрж░ рждрж╛рж▓рж┐ржХрж╛ ржерзЗржХрзЗ ржЕржкрж╛рж░рзЗржЯрж░ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи: ЁЯСИ ЁЯСЙ тЖФя╕П");
        } else {
          await sendText(senderPsid, "To learn about mobile operators, select an operator from the list below: ЁЯСИ ЁЯСЙ тЖФя╕П");
        }

        await delay(2000);

        sendMobileOperatorAsCarousel(senderPsid, userLanguage[senderPsid]);
        // sendMobileOperatorQuickReplies(senderPsid, userLanguage[senderPsid]);    
      })();
      break;

    case 'GOVT_HELPLINE':
      (async () => {
        if (userLanguage[senderPsid] === "bangla") {
          await sendText(senderPsid, "рж╕рж░ржХрж╛рж░рж┐ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирждрзЗ ржирж┐ржЪрзЗрж░ рждрж╛рж▓рж┐ржХрж╛ ржерзЗржХрзЗ ржмрж╛ржЯржи ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи ЁЯСЗ");
        } else {
          await sendText(senderPsid, "To learn about govt. helplines, select a button from the list below. ЁЯСЗ");
        }    

        await delay(2000);

        govtHelpline(senderPsid, userLanguage[senderPsid]);
      })();
      break;  
    
    case 'MOBILE_OPERATOR_HELPLINE':
      (async () => {
        if (userLanguage[senderPsid] === "bangla") {
          await sendText(senderPsid, "ржорзЛржмрж╛ржЗрж▓ ржЕржкрж╛рж░рзЗржЯрж░ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирждрзЗ ржирж┐ржЪрзЗрж░ рждрж╛рж▓рж┐ржХрж╛ ржерзЗржХрзЗ ржмрж╛ржЯржи ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи ЁЯСЗ");
        } else {
          await sendText(senderPsid, "To learn about mobile operators helplines, select a button from the list below. ЁЯСЗ");
        }    

        await delay(2000);

        sendMobileOperatorHelpline(senderPsid, userLanguage[senderPsid]);   
      })();
      break;   

    case 'SHOW_MAIN_MENU':
        sendMobileOperatorQuickReplies(senderPsid, userLanguage[senderPsid]);
      break;
    // Optional: add handlers for other menu options here
    default:
      if (userLanguage[senderPsid] === "bangla") {
        sendText(senderPsid, "ржзржирзНржпржмрж╛ржж! ржЖржорж░рж╛ ржПржЗ ржлрж┐ржЪрж╛рж░ржЯрж┐рж░ ржЙржкрж░ ржХрж╛ржЬ ржХрж░ржЫрж┐ред");
      } else {
        sendText(senderPsid, "Thanks! We are working on that feature.");
      }
  }
}

// 1. Language Selection
async function sendLanguageSelection(senderPsid) {
  const user = await getUserProfile(senderPsid);
  const text = `Hello, ${user.first_name}! Welcome to BTRC. Please select your language.\nрж╣рзНржпрж╛рж▓рзЛ, ${user.first_name}! ржмрж┐ржЯрж┐ржЖрж░рж╕рж┐рждрзЗ ржЖржкржирж╛ржХрзЗ рж╕рзНржмрж╛ржЧрждржоред ржЕржирзБржЧрзНрж░рж╣ржкрзВрж░рзНржмржХ ржЖржкржирж╛рж░ ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржиредЁЯСЗ`; 
  const buttons = [
    {
      type: "postback",
      title: "ржмрж╛ржВрж▓рж╛ ЁЯЗзЁЯЗй",
      payload: "LANG_BANGLA"
    },
    {
      type: "postback",
      title: "English ЁЯЗмЁЯЗз",
      payload: "LANG_ENGLISH"
    }
  ];

  const response = {
    attachment: {
      type: "template",
      payload: {
        template_type: "button",
        text,
        buttons
      }
    }
  };
  callSendAPI(senderPsid, response);
}


// 2. Main Menu
function sendMainMenuAsCarousel(senderPsid, lang) {
  const isBangla = lang === 'bangla';

  const elements = [
    {
      title: isBangla ? "ржмрж┐ржЯрж┐ржЖрж░рж╕рж┐" : "BTRC",
      image_url: `${process.env.BASE_URL}/images/BTRC.png`,
      subtitle: isBangla
        ? "ржЖржкржирж╛рж░ ржЕржнрж┐ржпрзЛржЧ, ржкрзНрж░рж╢рзНржи, ржЕржирзБрж░рзЛржз ржЭрж╛ржорзЗрж▓рж╛ржмрж┐рж╣рзАржи ржЬржорж╛ ржжрж┐ржиред"
        : "Submit your complaints, questions, and requests hassle-free.",
      buttons: [
        {
        type: "web_url",
        url: "https://crm.btrc.gov.bd/",
        title: isBangla ? "ЁЯУЭ ржЕржнрж┐ржпрзЛржЧ ржлрж░рзНржо" : "ЁЯУЭ Complaint Form"
      },
      {
        // type: "phone_number",
        // title: isBangla ? "ЁЯУЮ ржХрж▓ ржмрж┐ржЯрж┐ржЖрж░рж╕рж┐ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи : рззрзжрзж" : "ЁЯУЮ Call BTRC Helpline: 100",
        // payload: "100"
          type: "postback",
          title: isBangla ? "ржЕржнрж┐ржпрзЛржЧрзЗрж░ ржЕржмрж╕рзНржерж╛" : "Complain Status",
          payload: "COMPLAIN_STATUS"
      },
      {
        // type: "web_url",
        // url: "https://www.btrc.gov.bd",
        // title: isBangla ? "ЁЯМР ржмрж┐ржЯрж┐ржЖрж░рж╕рж┐ ржУрзЯрзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР BTRC Website"
          type: "postback",
          title: isBangla ? "рж╕ржХрж▓ ржкрж░рж┐рж╖рзЗржмрж╛" : "All Services",
          payload: "BTRC"
      }
      ]
    },
    {
      title: isBangla ? "ржорзЛржмрж╛ржЗрж▓ ржЕржкрж╛рж░рзЗржЯрж░" : "Mobile Operator",
      image_url: `${process.env.BASE_URL}/images/mobile_operator.png`,
      subtitle: isBangla
        ? "ржорзЛржмрж╛ржЗрж▓ ржЕржкрж╛рж░рзЗржЯрж░ рж╕ржорзНржкрж░рзНржХрж┐ржд рждржерзНржп ржкрж╛ржиред"
        : "Get information about mobile operators.",
      buttons: [
        {
          type: "postback",
          title: isBangla ? "ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржжрзЗржЦрзБржи" : "View Details",
          payload: "MOBILE_OPERATOR"
        }
      ]
    },
    {
      title: isBangla ? "ржПржоржПржиржкрж┐ (MNP)" : "MNP (Mobile Number Portability)",
      image_url: `${process.env.BASE_URL}/images/mnp.png`,
      subtitle: isBangla
        ? "ржирж╛ржорзНржмрж╛рж░ ржкрж░рж┐ржмрж░рзНрждржи ржирж╛ ржХрж░рзЗ ржЕржкрж╛рж░рзЗржЯрж░ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржиред"
        : "Change your operator without changing your number.",
      buttons: [
        {
          type: "postback",
          title: isBangla ? "ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржжрзЗржЦрзБржи" : "View Details",
          payload: "MNP"
        }
      ]
    },
    {
      title: isBangla ? "рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи ржиржорзНржмрж░" : "Helpline Numbers",
      image_url: `${process.env.BASE_URL}/images/helpline.png`,
      subtitle: isBangla
        ? "рж╕рж░ржХрж╛рж░рж┐ ржПржмржВ ржорзЛржмрж╛ржЗрж▓ ржЕржкрж╛рж░рзЗржЯрж░ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирждрзЗ ржирж┐ржЪрзЗрж░ рждрж╛рж▓рж┐ржХрж╛ ржерзЗржХрзЗ ржмрж╛ржЯржи ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи ЁЯСЗ" : "Select the button from Open and Restricted to learn about the mobile operator helpline. ЁЯСЗ ",
      buttons: [
        {
        type: "web_url",
        url: "https://bangladesh.gov.bd/site/page/aaebba14-f52a-4a3d-98fd-a3f8b911d3d9",
        title: isBangla ? "ЁЯМР рж╕ржХрж▓ ржЬрж░рзБрж░рж┐ рж╣ржЯрж▓рж╛ржЗржи" : "ЁЯМР All Emergency Hotline"
        },
        {
          type: "postback",
          title: isBangla ? "ЁЯУЮ рж╕рж░ржХрж╛рж░рж┐ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи" : "ЁЯУЮ Govt. Helpline",
          payload: "GOVT_HELPLINE"
        },
        {
          type: "postback",
          title: isBangla ? "ЁЯУЮ ржорзЛржмрж╛ржЗрж▓ ржЕржкрж╛рж░рзЗржЯрж░ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи" : "ЁЯУЮ Mobile Operator Helpline",
          payload: "MOBILE_OPERATOR_HELPLINE"
        },
      ]
    }
  ];

  const response = {
    attachment: {
      type: "template",
      payload: {
        template_type: "generic",
        elements: elements
      }
    }
  };

  callSendAPI(senderPsid, response);
}


// 3. BTRC Options

function btrcCarousel(senderPsid, lang) {
  const isBangla = lang === 'bangla';

  const elements = [
    {
      title: isBangla ? "ржмрж┐ржЯрж┐ржЖрж░рж╕рж┐ ржЕржнрж┐ржпрзЛржЧ ржПржмржВ ржЕржмрж╕рзНржерж╛" : "BTRC Complain and Status",
      // image_url: `${process.env.BASE_URL}/images/BTRC.png`,
      subtitle: isBangla
        ? "ржмрж┐ржЯрж┐ржЖрж░рж╕рж┐ рж╕ржорзНржкрж░рзНржХрж┐ржд ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржкрж░рж┐рж╖рзЗржмрж╛ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирзБржиред"
        : "Learn about your favorite BTRC related services.",
      buttons: [
        {
          type: "web_url",
          url: "https://crm.btrc.gov.bd/",
          title: isBangla ? "ЁЯУЭ ржЕржнрж┐ржпрзЛржЧ ржлрж░рзНржо" : "ЁЯУЭ Complaint Form"
        },
        {
          type: "postback",
          title: isBangla ? "ржЕржнрж┐ржпрзЛржЧрзЗрж░ ржЕржмрж╕рзНржерж╛" : "Complain Status",
          payload: "COMPLAIN_STATUS"
        }
      ]
    },
    {
      title: isBangla ? "ржбрж┐ржПржиржбрж┐ ржЕрзНржпрж╛ржХрзНржЯрж┐ржнрзЗрж╢ржи" : "DND Activation",
      // image_url: `${process.env.BASE_URL}/images/mobile_operator.png`,
      subtitle: isBangla
        ? "ржЧрзНрж░рж╛ржорзАржиржлрзЛржирзЗрж░ ржЧрзНрж░рж╛рж╣ржХржжрзЗрж░ *рззрзирзз*рззрззрзжрзз#, ржмрж╛ржВрж▓рж╛рж▓рж┐ржВржХ ржПрж░ ржЧрзНрж░рж╛рж╣ржХржжрзЗрж░ *рззрзирзз*рзо*рзм#┬а ржПржмржВ рж░ржмрж┐рж░ ржЧрзНрж░рж╛рж╣ржХржжрзЗрж░ *рзн# ржбрж╛рзЯрж╛рж▓ ржХрж░рзЗ рж╕рзЗржмрж╛ржЯрж┐ ржЧрзНрж░рж╣ржг ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред"
        : "Grameenphone customers can avail the service by dialing *121*1101#, Banglalink customers *121*8*6#, and Robi customers *7#.",
      buttons: [
        {
          type: "web_url",
          url: "https://btrc.gov.bd/site/page/e360dbf7-0886-4839-ac00-8b3e80384c47/Do-Not-Disturb-(DND)",
          title: isBangla ? "ЁЯМР ржХрзНрж▓рж┐ржХ ржХрж░рзБржи" : "ЁЯМР Click Here"
        }
      ]
    },
    {
      title: isBangla ? "рж╕ржВржХрзНрж╖рж┐ржкрзНржд-ржХрзЛржб ржкржжрзНржзрждрж┐" : "Short-Code Procedure",
      // image_url: `${process.env.BASE_URL}/images/mobile_operator.png`,
      subtitle: isBangla
        ? "рж╢рж░рзНржЯ ржХрзЛржб ржмрж░рж╛ржжрзНржж ржкржжрзНржзрждрж┐ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛/рж╢рж░рзНржЯ ржХрзЛржб ржЖржмрзЗржжржи ржлрж░рзНржо/рж╢рж░рзНржЯ ржХрзЛржб ржмрж░рж╛ржжрзНржжрзЗрж░ рж╢рж░рзНрждрж╛ржмрж▓рзА ржПржмржВ рж╢рж░рзНржЯржХрзЛржб ржмрж░рж╛ржжрзНржж ржУ ржиржмрж╛рзЯржирзЗрж░ ржирж┐рзЯржорж╛ржмрж▓рзА"
        : "Short code allocation procedure guidelines/Short code application form/Short code allocation terms and conditions and short code allocation and renewal rules",
      buttons: [
        {
          type: "web_url",
          url: "https://btrc.gov.bd/site/page/05a6a990-5687-4a51-860c-e67ca9487fba/Short-code-Allocation",
          title: isBangla ? "ЁЯМР ржХрзНрж▓рж┐ржХ ржХрж░рзБржи" : "ЁЯМР Click Here"
        }
      ]
    },
    {
      title: isBangla ? "ржЕржиржирзБржорзЛржжрж┐ржд рж╣рзНржпрж╛ржирзНржбрж╕рзЗржЯ ржирж┐ржмржирзНржзржи" : "Unauthorized Handset registration",
      // image_url: `${process.env.BASE_URL}/images/mobile_operator.png`,
      subtitle: isBangla
        ? "ржЕржиржирзБржорзЛржжрж┐ржд рж╣рзНржпрж╛ржирзНржбрж╕рзЗржЯ ржирж┐ржмржирзНржзржирзЗрж░ ржЬржирзНржп ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛/ржЖржмрзЗржжржи ржлрж░рзНржо/рж╢рж░рзНрждрж╛ржмрж▓рзА"
        : "Guidelines/Application Form/Terms and Conditions for Unauthorized Handset Registration",
      buttons: [
        {
          type: "web_url",
          url: "https://neir.btrc.gov.bd/auth/login",
          title: isBangla ? "ЁЯМР ржХрзНрж▓рж┐ржХ ржХрж░рзБржи" : "ЁЯМР Click Here"
        }
      ]
    },
    {
      title: isBangla ? "рж▓рж╛ржЗрж╕рзЗржирзНрж╕-рж╕ржорзНржкрж░рзНржХрж┐ржд рждржерзНржп" : "Licence-Related Info",
      // image_url: `${process.env.BASE_URL}/images/mobile_operator.png`,
      subtitle: isBangla
        ? "рж▓рж╛ржЗрж╕рзЗржирзНрж╕ -рж╕ржорзНржкрж░рзНржХрж┐ржд рждржерзНржп, ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛, ржЖржмрзЗржжржи ржлрж░рзНржо ржПржмржВ рж╢рж░рзНрждрж╛ржмрж▓рзАред"
        : "Licence-related information including guidelines, application forms, and terms and conditions.",
      buttons: [
        {
          type: "web_url",
          url: "https://lims.btrc.gov.bd",
          title: isBangla ? "ЁЯМР ржХрзНрж▓рж┐ржХ ржХрж░рзБржи" : "ЁЯМР Click Here"
        }
      ]
    },
    {
      title: isBangla ? "ржПржоржПржиржкрж┐ (MNP)" : "MNP (Mobile Number Portability)",
      // image_url: `${process.env.BASE_URL}/images/mnp.png`,
      subtitle: isBangla
        ? "ржирж╛ржорзНржмрж╛рж░ ржкрж░рж┐ржмрж░рзНрждржи ржирж╛ ржХрж░рзЗ ржЕржкрж╛рж░рзЗржЯрж░ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржиред"
        : "Change your operator without changing your number.",
      buttons: [
        {
          type: "postback",
          title: isBangla ? "ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржжрзЗржЦрзБржи" : "View Details",
          payload: "MNP"
        }
      ]
    }
  ];

  const response = {
    attachment: {
      type: "template",
      payload: {
        template_type: "generic",
        elements: elements
      }
    }
  };

  callSendAPI(senderPsid, response);
}

function sendMobileOperatorQuickReplies(senderPsid, lang = 'english') {
  console.log('Sending mobile operator quick replies to:', senderPsid, 'Language:', lang);
  const isBangla = lang === 'bangla';

  const response = {
    text: isBangla
      ? "ржЖржкржирж╛рж░ ржорзЛржмрж╛ржЗрж▓ ржЕржкрж╛рж░рзЗржЯрж░ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи:"
      : "Please select your mobile operator:",
    quick_replies: [
      {
        content_type: "text",
        title: isBangla ? "ржЧрзНрж░рж╛ржорзАржгржлрзЛржи" : "Grameenphone",
        payload: "OPERATOR_GP"
      },
      {
        content_type: "text",
        title: isBangla ? "рж░ржмрж┐" : "Robi",
        payload: "OPERATOR_ROBI"
      },
      {
        content_type: "text",
        title: isBangla ? "ржмрж╛ржВрж▓рж╛рж▓рж┐ржВржХ" : "Banglalink",
        payload: "OPERATOR_BANGLALINK"
      },
      {
        content_type: "text",
        title: isBangla ? "ржЯрзЗрж▓рж┐ржЯржХ" : "Teletalk",
        payload: "OPERATOR_TELETALK"
      }
    ]
  };

  return callSendAPI(senderPsid, response);
}

//2.1 Mobile Operator Carousel
function sendMobileOperatorAsCarousel(senderPsid, lang = 'english') {
  console.log('Sending mobile operator carousel to:', senderPsid, 'Language:', lang);
  const isBangla = lang === 'bangla';

  const elements = [
    {
      title: isBangla ? "ржЧрзНрж░рж╛ржорзАржгржлрзЛржи" : "Grameenphone",
      image_url: `${process.env.BASE_URL}/images/grameenphone.png`,
      subtitle: isBangla ? "ЁЯУЮ ржЧрзНрж░рж╛ржорзАржгржлрзЛржи рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз ржмрж╛ ржЧрзНрж░рж╛рж╣ржХ ржЕржнрж┐ржпрзЛржЧ ржиржорзНржмрж░: рззрзлрзо, ржПржХржЗ ржЕржкрж╛рж░рзЗржЯрж░рзЗрж░ рж╕рж┐ржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи" : "ЁЯУЮ Grameenphone Helpline: 121,  Customer Complaint: 158, use same operator SIM",
      buttons: [
            {
              type: "web_url",
              url: "https://www.grameenphone.com",
              title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"
            },
            {
                type: "phone_number",
                title: isBangla ? "ЁЯУЮ ржХрж▓ рззрзирзз" : "ЁЯУЮ Call 121",
                payload: "121"
              }       
      ]
    },
        {
      title: isBangla ? "ржмрж╛ржВрж▓рж╛рж▓рж┐ржВржХ" : "Banglalink",
      image_url: `${process.env.BASE_URL}/images/banglalink.png`,
      subtitle: isBangla ? "ЁЯУЮ ржмрж╛ржВрж▓рж╛рж▓рж┐ржВржХ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз, ржПржХржЗ ржЕржкрж╛рж░рзЗржЯрж░рзЗрж░ рж╕рж┐ржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи" : "ЁЯУЮ Banglalink Helpline: 121, use same operator SIM",
      buttons: [
            {
              type: "web_url",
              url: "https://www.banglalink.net",
              title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"
            },
            {
                type: "phone_number",
                title: isBangla ? "ЁЯУЮ ржХрж▓ рззрзирзз" : "ЁЯУЮ Call 121",
                payload: "121"
              }       
      ]
    },
    {
      title: isBangla ? "рж░ржмрж┐" : "Robi",
      image_url: `${process.env.BASE_URL}/images/robi.png`,
      subtitle: isBangla ? "ЁЯУЮ рж░ржмрж┐ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз ржмрж╛ рзжрззрзорззрзпрзкрзжрзжрзкрзжрзж, ржПржХржЗ ржЕржкрж╛рж░рзЗржЯрж░рзЗрж░ рж╕рж┐ржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи" : "ЁЯУЮ Robi Helpline: 121 or 01819400400, use same operator SIM",
      buttons: [
        { type: "web_url",
          url: "https://www.robi.com.bd",
          title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"},
        { type: "phone_number", title: isBangla ? "ЁЯУЮ ржХрж▓ рззрзирзз" : "ЁЯУЮ Call 121", payload: "121" }
      ]
    },
    {
      title: isBangla ? "ржПржпрж╝рж╛рж░ржЯрзЗрж▓" : "Airtel",
      image_url: `${process.env.BASE_URL}/images/airtel.png`,
      subtitle: isBangla ? "ЁЯУЮ ржПржпрж╝рж╛рж░ржЯрзЗрж▓ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз ржмрж╛ рзжрззрзмрзнрзорзмрзжрзжрзнрзорзм, ржПржХржЗ ржЕржкрж╛рж░рзЗржЯрж░рзЗрж░ рж╕рж┐ржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи" : "ЁЯУЮ Airtel Helpline: 121 or 01678600786, use same operator SIM",
      buttons: [
        { type: "web_url",
          url: "https://www.bd.airtel.com",
          title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"},
        { type: "phone_number", title: isBangla ? "ЁЯУЮ ржХрж▓ рззрзирзз" : "ЁЯУЮ Call 121", payload: "121" },
        { type: "phone_number", title: isBangla ? "ЁЯУЮ ржХрж▓ рзжрззрзмрзнрзорзмрзжрзжрзнрзорзм" : "ЁЯУЮ Call 01678600786", payload: "01678600786" }
      ]
    },
    {
      title: isBangla ? "ржЯрзЗрж▓рж┐ржЯржХ" : "Teletalk",
      image_url: `${process.env.BASE_URL}/images/teletalk.png`,
      subtitle: isBangla ? "ЁЯУЮ ржЯрзЗрж▓рж┐ржЯржХ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз ржмрж╛ рзжрззрзлрзжрзжрззрзирззрззрзирзз-рзп, ржПржХржЗ ржЕржкрж╛рж░рзЗржЯрж░рзЗрж░ рж╕рж┐ржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи" : "ЁЯУЮ Teletalk Helpline: 121 or 01500121121-9, use same operator SIM",
      buttons: [
        { type: "web_url",
          url: "https://www.teletalk.com.bd",
          title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"},
        { type: "phone_number", title: isBangla ? "ЁЯУЮ ржХрж▓ рззрзирзз" : "ЁЯУЮ Call 121", payload: "121" },
        { type: "phone_number", title: isBangla ? "ЁЯУЮ ржХрж▓ рзжрззрзлрзжрзжрззрзирззрззрзирзз" : "ЁЯУЮ Call 01500121121", payload: "01500121121-9" }
      ]
    }
  ];

  const response = {
    attachment: {
      type: "template",
      payload: {
        template_type: "generic",
        elements: elements
      }
    }
  };

  callSendAPI(senderPsid, response); // Keep message format simple
}

// 4.1 govt Helpline Numbers
function govtHelpline(senderPsid, lang = 'english') {
  const isBangla = lang === 'bangla';

  const elements = [
    {
      title: isBangla ? "ЁЯУЮ ржЬрж╛рждрзАрзЯ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи" : "ЁЯУЮ National Helpline",
      image_url: `${process.env.BASE_URL}/images/national_helpline.png`,
      subtitle: isBangla ? "ЁЯУЮ ржЬрж╛рждрзАрзЯ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рзйрзйрзй" : "ЁЯУЮ National Helpline: 333",
      buttons: [
        {
          type: "web_url",
          url: "https://www.govt.gov.bd",
          title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"
        },
        {
          type: "phone_number",
          title: isBangla ? "ЁЯУЮ ржХрж▓ рзйрзйрзй" : "ЁЯУЮ Call 333",
          payload: "333"
        }
      ]
    },
    {
      title: isBangla ? "ЁЯУЮ ржкрзБрж▓рж┐рж╢ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи" : "ЁЯУЮ Police Helpline",
      image_url: `${process.env.BASE_URL}/images/police_helpline.png`,
      subtitle: isBangla ? "ЁЯУЮ ржкрзБрж▓рж┐рж╢ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рзпрзпрзп" : "ЁЯУЮ Police Helpline: 999",
      buttons: [
        {
          type: "web_url",
          url: "https://www.police.gov.bd",
          title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"
        },
        {
          type: "phone_number",
          title: isBangla ? "ЁЯУЮ ржХрж▓ рзпрзпрзп" : "ЁЯУЮ Call 999",
          payload: "999"
        }
      ]
    }
  ];

  const response = {
    attachment: {
      type: "template",
      payload: {
        template_type: "generic",
        elements: elements
      }
    }
  };

  callSendAPI(senderPsid, response); // Keep message format simple
}

// 4.1.1 Emergency Helpline Numbers
function emergencyHelpline(senderPsid, lang = 'english') {
  const isBangla = lang === 'bangla'; 

}

// 4.1.2 Law enforcement Helpline Numbers
function lawEnforcementHelpline(senderPsid, lang = 'english') {
  const isBangla = lang === 'bangla';
}

// 4.2 Mobile Operator Helpline Numbers
function sendMobileOperatorHelpline(senderPsid, lang = 'english') {
  const isBangla = lang === 'bangla'; 

  const elements = [
    {
      title: isBangla ? "ЁЯУЮ ржЧрзНрж░рж╛ржорзАржгржлрзЛржи рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи" : "ЁЯУЮ Grameenphone Helpline",
      image_url: `${process.env.BASE_URL}/images/grameenphone.png`,
      subtitle: isBangla ? "ЁЯУЮ ржЧрзНрж░рж╛ржорзАржгржлрзЛржи рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: 121" : "ЁЯУЮ Grameenphone Helpline: 121",
      buttons: [
        {
          type: "web_url",
          url: "https://www.grameenphone.com",
          title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"
        },
        {
          type: "phone_number",
          title: isBangla ? "ЁЯУЮ ржХрж▓ рззрзирзз" : "ЁЯУЮ Call 121",
          payload: "121"
        }
      ]
    },
    {
      title: isBangla ? "ЁЯУЮ рж░ржмрж┐рж░ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи" : "ЁЯУЮ Robi Helpline",
      image_url: `${process.env.BASE_URL}/images/robi.png`,
      subtitle: isBangla ? "ЁЯУЮ рж░ржмрж┐рж░ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз" : "ЁЯУЮ Robi Helpline: 121",
      buttons: [
        {
          type: "web_url",
          url: "https://www.robi.com.bd",
          title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"
        },
        {
          type: "phone_number",
          title: isBangla ? "ЁЯУЮ ржХрж▓ рззрзирзз" : "ЁЯУЮ Call 121",
          payload: "121"
        }
      ]
    },
    {
      title: isBangla ? "ЁЯУЮ ржПржпрж╝рж╛рж░ржЯрзЗрж▓ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи" : "ЁЯУЮ Airtel Helpline",
      image_url: `${process.env.BASE_URL}/images/airtel.png`,
      subtitle: isBangla ? "ЁЯУЮ ржПржпрж╝рж╛рж░ржЯрзЗрж▓ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз" : "ЁЯУЮ Airtel Helpline: 121",
      buttons: [
        {
          type: "web_url",
          url: "https://www.bd.airtel.com",
          title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"
        },
        {
          type: "phone_number",
          title: isBangla ? "ЁЯУЮ ржХрж▓ рззрзирзз" : "ЁЯУЮ Call 121",
          payload: "121"
        }
      ]
    },
    {
      title: isBangla ? "ЁЯУЮ ржЯрзЗрж▓рж┐ржЯржХ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи" : "ЁЯУЮ Teletalk Helpline",
      image_url: `${process.env.BASE_URL}/images/teletalk.png`,
      subtitle: isBangla ? "ЁЯУЮ ржЯрзЗрж▓рж┐ржЯржХ рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзирзз" : "ЁЯУЮ Teletalk Helpline: 121",
      buttons: [
        {
          type: "web_url",
          url: "https://www.teletalk.com.bd",
          title: isBangla ? "ЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ" : "ЁЯМР Visit Website"
        },
        {
          type: "phone_number",
          title: isBangla ? "ЁЯУЮ ржХрж▓ рззрзирзз" : "ЁЯУЮ Call 121",
          payload: "121"
        }
      ]
    }
  ];

  const response = {
    attachment: {
      type: "template",
      payload: {
        template_type: "generic",
        elements: elements
      }
    }
  };

  callSendAPI(senderPsid, response); // Keep message format simple
}

// Messenger API caller with Promise
function callSendAPI(senderPsid, response) {
  return new Promise((resolve, reject) => {
    const requestBody = {
      recipient: { id: senderPsid },
      message: response
    };

    request({
      uri: "https://graph.facebook.com/v23.0/me/messages",
      qs: { access_token: PAGE_ACCESS_TOKEN },
      method: "POST",
      json: requestBody
    }, (err, res, body) => {
      if (!err) {
        console.log("Message sent!");
        resolve(body);
      } else {
        console.error("Unable to send message:", err);
        reject(err);
      }
    });
  });
}

// sendText now async/await compatible
function sendText(senderPsid, text) {
  const response = { text };
  return callSendAPI(senderPsid, response);
}



// function getUserProfile(psid, callback) {
//   const url = `https://graph.facebook.com/${psid}?fields=first_name,last_name,profile_pic&access_token=${process.env.PAGE_ACCESS_TOKEN}`;

//   request({
//     uri: url,
//     method: 'GET',
//   }, (err, res, body) => {
//     if (!err) {
//       const user = JSON.parse(body);
//       callback(user);
//     } else {
//       console.error("Error fetching user profile: ", err);
//     }
//   });
// }

async function getUserProfile(psid) {
  const url = `https://graph.facebook.com/${psid}?fields=first_name,last_name&access_token=${process.env.PAGE_ACCESS_TOKEN}`;
  const response = await axios.get(url);
  console.log(`User profile fetched: ${response.data.first_name} ${response.data.last_name}`);
  return response.data;
}

function sendComplainFormButton(senderPsid, lang) {
    const response = {
        "attachment": {
            "type": "template",
            "payload": {
                "template_type": "button",
                "text": lang === 'bangla' ? 
                    'ржЕржнрж┐ржпрзЛржЧ ржлрж░рзНржо ржкрзЗрждрзЗ ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржи ржХрзНрж▓рж┐ржХ ржХрж░рзБржи:' : 
                    'Click the button below to access the complaint form:',
                "buttons": [
                    {
                        "type": "web_url",
                        "url": "https://crm.btrc.gov.bd/",
                        "title": lang === 'bangla' ? 'ЁЯУЭ ржЕржнрж┐ржпрзЛржЧ ржлрж░рзНржо' : 'ЁЯУЭ Complaint Form',
                        "webview_height_ratio": "tall", // or "full", "compact"
                        "messenger_extensions": true, // Enable messenger extensions
                        "fallback_url": "https://crm.btrc.gov.bd/" // Fallback for unsupported devices
                    }
                ]
            }
        }
    };
    callSendAPI(senderPsid, response);
}

async function setMessengerProfile() {
  const url = `https://graph.facebook.com/v23.0/me/messenger_profile?access_token=${PAGE_ACCESS_TOKEN}`;

  const body = {
    get_started: {
      payload: "GET_STARTED"
    },
    greeting: [
      {
        locale: "default",
        text: "Hi! Welcome to BTRC. Please avoid sharing personal data (NID, phone, password).\nрж╣рзНржпрж╛рж▓рзЛ! ржмрж┐ржЯрж┐ржЖрж░рж╕рж┐рждрзЗ ржЖржкржирж╛ржХрзЗ рж╕рзНржмрж╛ржЧрждржоред ржжржпрж╝рж╛ ржХрж░рзЗ ржмрзНржпржХрзНрждрж┐ржЧржд рждржерзНржп рж╢рзЗржпрж╝рж╛рж░ ржХрж░ржмрзЗржи ржирж╛ред"
      }
    ],
    persistent_menu: [
      {
        locale: "default",
        composer_input_disabled: false,
        call_to_actions: [
          {
            type: "postback",
            title: "ЁЯПа Main Menu",
            payload: "SHOW_MAIN_MENU"
          },
          {
            type: "web_url",
            title: "ЁЯМР Powered by Genex Infosys PLC",
            url: "https://genexinfosys.com",
            webview_height_ratio: "full"
          }
        ]
      }
    ]
  };

  try {
    const response = await axios.post(url, body, {
      headers: { "Content-Type": "application/json" }
    });
    console.log("Messenger profile set:", response.data);
  } catch (error) {
    console.error("Error setting profile:", error.response?.data || error.message);
  }
}

app.get("/set-profile", async (req, res) => {
  await setMessengerProfile();
  res.send("Messenger profile setup triggered.");
});

// Start server
const PORT = process.env.PORT || 3001;
app.listen(PORT, () => {
  console.log(`Server started on port ${PORT}`);
});
